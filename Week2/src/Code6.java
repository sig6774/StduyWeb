/*
 생명주기
 - 값을 가지고 있는 것들은 생명주기가 존재
 - 객체 생존동안 유지되는 상태 
 	ex) 속도, 유량
 - 행동 동안에만 유지되는 상태
	ex) 주유량 
 */

class 자동차2{
	int 속도 = 0;
	int 유량 = 0;
	void 주유받다(int 주유량) {
		this.유량 = 유량 + 주유량;
	}
	void 가속하다() {
		this.속도 = this.속도 + 10; 
		this.유량 = this.유량 - 1;
	}
	void 감속하다() {
		this.속도 = this.속도 - 10;
		this.유량 = this.유량 - 1;
	}
}

class 자동차1{
	int 속도 = 0;
	void 가속하다() {
		속도 = 속도 + 10;
	}
}

class 사람 {
	자동차1 내차 = null; 
//	자동차1 내차; 
	// 가르키는게 없음 (참조속성)
	void 차를구입하다 (자동차1 하나의차){
		this.내차 = 하나의차;
		// 행동(메소드)에서 입력받은 것을 객체변수로 가르킴 
	}
	void 운전하다() {
		자동차1  운전할차;
		// 하나 만들어줌
		
	if (this.내차 != null) {
		운전할차 = this.내차;
		// 내차가 있으면 차를구입했을때의 차 
	}
	else 
		{운전할차 = new 자동차1();}
	// 내차가 없으면 새로 생성 
	
		운전할차.가속하다();
	}
	
}
public class Code6 {

	public static void main(String[] args) {
		자동차2 내차 = new 자동차2();
		내차.주유받다(30);
		내차 = new 자동차2(); /// 이름이 없어진 것 객체는 자동 정리됨 
		내차.주유받다(50);
		System.out.println(내차.유량); // 유량은 객체가 생존하는 동안 유지되는 상태임 
		// 객체는 가르키는 것이 있을때에는 계속 유지됨
		// 행동(메소드)변수는 행동이 유지되는 동안에만 유지
		
		자동차1 차1 = new 자동차1();
		사람 한사람 = new 사람();
		한사람.운전하다();
		한사람.차를구입하다(차1);
		한사람.운전하다();
		System.out.println(한사람.내차.속도);
		// 한사람안에 내차라는 것이 있고 내차에는 속도라는 것이 있어 출력 가능 
		/*
		 - 변수 : 범위(행동, 객체)내 유지, (일상인것, 가르키는 것)
		 - 객체 : 가르킴 | 이름이 있는 동안 유지 
		 */
		
		사람 두사람 = new 사람();
		두사람.운전하다();
		// 운전할차가 없으므로 "운전하다"라는 행동(메소드)에서 새로운 객체 생성
}
}